#include<bits/stdc++.h>
using ll=long long;
using namespace std;
int n, m; 
vector<int> adj[1005]; 
bool visited[1005];
void nhap(){
	cin >> n >> m;
	for(int i = 0; i < m; i++){
	int x, y; cin >> x >> y;
	adj[x].push_back(y);
	//adj[y].push_back(x);
	}
	memset(visited, false, sizeof(visited));
}

void DFS(int u){
	cout << u << ' ';
	visited[u] = true;
	for(int v : adj[u]){
	if(!visited[v]){
		DFS(v);
		}
	}
}

void BFS(int u){
	queue<int> q;
	q.push(u);
	visited[u] = true;
	while(!q.empty()){
		int x = q.front(); q.pop();
		cout << x << ' ';
		for(int y : adj[x]){
		if(!visited[y]){
			q.push(y);
			visited[y] = true;
			}
		}
	}	
}
int main() {
    nhap();
    
    cout << "DFS: ";
    DFS(1); 
    cout << endl;

    memset(visited, false, sizeof(visited)); 
    
    cout << "BFS: ";
    BFS(1); 
    cout << endl;

    return 0;
}
